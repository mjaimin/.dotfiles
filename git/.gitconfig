# ----------------------------------
# Global Git Configuration
# ----------------------------------

# ──────────────────────────────────────────────────────────────────────────
# CORE CONFIG
# ──────────────────────────────────────────────────────────────────────────
[core]
    editor             = vim
    excludesfile       = ~/.gitignore_global
    attributesfile     = ~/.gitattributes
    compression        = 9
    bigFileThreshold   = 512m
    whitespace         = trailing-space,space-before-tab
    pager              = delta
    untrackedCache     = true

# ──────────────────────────────────────────────────────────────────────────
# AUTHENTICATION & CREDENTIALS
# ──────────────────────────────────────────────────────────────────────────
[credential "https://github.com"]
    helper = !/usr/bin/gh auth git-credential
[credential "https://gist.github.com"]
    helper = !/usr/bin/gh auth git-credential
[credential]
    helper = store

# ──────────────────────────────────────────────────────────────────────────
# COMMIT
# ──────────────────────────────────────────────────────────────────────────
[commit]
    gpgSign  = true
    template = ~/.gitmessage
    verbose  = true

# ──────────────────────────────────────────────────────────────────────────
# COLOR & UI
# ──────────────────────────────────────────────────────────────────────────
[color]
    ui         = auto
    diff       = auto
    status     = auto
    branch     = auto
    interactive= auto

[color "branch"]
    current = red reverse
    local   = blue
    remote  = green

[color "diff"]
    meta  = yellow
    frag  = magenta
    old   = red bold
    new   = green
    plain = white

[color "status"]
    added     = yellow
    changed   = green
    untracked = cyan

# ──────────────────────────────────────────────────────────────────────────
# MERGE & MERGETOOL
# ──────────────────────────────────────────────────────────────────────────
[merge]
    ff            = false           # Don't fast-forward merges automatically
    conflictstyle = diff3           # Show 3-way diffs for conflicts
    tool          = bcompare         # Default merge tool
    log           = true
    stat          = true

[mergetool "vimdiff"]
    cmd = vimdiff "$LOCAL" "$REMOTE" "$BASE" "$MERGED"

[mergetool "meld"]
    cmd = meld "$LOCAL" "$MERGED" "$REMOTE" --output "$MERGED"

[mergetool "bcompare"]
    cmd = bcompare "$LOCAL" "$REMOTE" "$BASE" "$MERGED"

[rerere]
    enabled = false   # Disable reuse of recorded resolutions

# ──────────────────────────────────────────────────────────────────────────
# DIFF & DIFFTOOL
# ──────────────────────────────────────────────────────────────────────────
[diff]
    tool            = bcompare
    algorithm       = histogram
    mnemonicPrefix  = true
    renames         = copies
    indentHeuristic = true
    colorMoved      = zebra  # More visually distinct for moved lines

[difftool]
    prompt = false  # Don't ask for confirmation before launching

[difftool "meld"]
    cmd = meld "$LOCAL" "$REMOTE"

[difftool "kompare"]
    cmd = kompare "$LOCAL" "$REMOTE"

[difftool "bcompare"]
    cmd = bcompare "$LOCAL" "$REMOTE"

# ──────────────────────────────────────────────────────────────────────────
# REBASE, FETCH, PUSH, PULL
# ──────────────────────────────────────────────────────────────────────────
[rebase]
    autosquash   = true     # "fixup!" and "squash!" commits get folded automatically
    autoStash    = true     # Stash before rebase
    updateRefs   = true     # Update reflogs
    missingCommitsCheck = error

[fetch]
    prune       = true      # Remove remote-tracking branches deleted from remote
    pruneTags   = true      # Remove tags deleted from remote
    parallel    = 0         # Unlimited parallel fetch if server supports multi-ack

[pull]
    rebase      = true      # Use rebase by default when pulling
    ff          = only      # Only do fast-forward merges if possible

[push]
    default         = current   # Push current branch to remote of same name
    autoSetupRemote = true      # Automatically track remote branch
    followTags      = true      # Push annotated tags along with commits

# ──────────────────────────────────────────────────────────────────────────
# FILTERS (e.g., Git LFS)
# ──────────────────────────────────────────────────────────────────────────
[filter "lfs"]
    clean    = git-lfs clean %f
    smudge   = git-lfs smudge %f
    required = true

# ──────────────────────────────────────────────────────────────────────────
# DELTA CONFIGURATION
# https://github.com/dandavison/delta
# ──────────────────────────────────────────────────────────────────────────
[delta]
    navigate       = true        # Use n / N to jump between diff sections
    light          = false       # Set true if you have a light terminal background
    side-by-side   = true        # Display side-by-side diffs
    line-numbers   = true        # Show line numbers

[interactive]
    diffFilter = delta --color-only

# ──────────────────────────────────────────────────────────────────────────
# ALIASES
# ──────────────────────────────────────────────────────────────────────────
[alias]
    # --- Status & Information ---
    s  = status -s
    st = status

    # --- Commit Shortcuts ---
    c   = commit
    ci  = commit
    cm  = commit -m
    cma = commit -a -m
    ca  = commit --amend
    caa = commit -a --amend -C HEAD
    empty = "!git commit -am\"[empty] Initial commit\" --allow-empty"

    # --- Branch Management ---
    b      = branch
    ba     = branch -a
    br     = branch -v
    bra    = branch -ra
    bd     = branch -d
    bD     = branch -D
    brc    = "!git branch --merged | grep -v '*' | xargs git branch -d"
    branch-name = "!sh -c 'git rev-parse --abbrev-ref HEAD' -"
    cleanup     = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"
    findmerged  = "!git branch --merged | grep -v '\\*'"
    findunmerged= "!git branch --no-merged"

    # --- Checkout / Switch ---
    co  = checkout
    cob = checkout -b
    sw  = switch
    swt = switch --track
    swn = switch -c
    swl = switch -

    # --- Diffs & Changes ---
    d      = diff
    ds     = diff --staged
    dc     = diff --cached
    dt     = difftool
    last   = diff HEAD^
    all-changes  = diff HEAD
    branches-diff= "!sh -c 'git diff --name-status $1..$2' -"

    # --- Logs & History ---
    l   = log --oneline
    lg  = log --graph --pretty=format:'%C(auto)%h%d %s %C(green)(%cr) %C(bold blue)<%an>'
    hist= log --pretty=format:'%C(yellow)%h%C(reset) %C(green)%ad%C(reset) | %s%C(red)%d%C(reset) [%an]' --graph --date=short
    ll  = log --pretty=format:"%C(yellow)%h%Cred%d %Creset%s%Cblue [%cn]" --decorate --numstat
    daily= "!git log --since=yesterday"
    week = "!git log --since='1 week ago'"

    # --- Remote Operations ---
    f   = fetch --all --prune
    p   = push
    pf  = push --force-with-lease
    up  = "!git remote update -p; git merge --ff-only @{u}"
    sync= "!git pull --rebase && git push"

    # --- Stash ---
    ss  = stash save
    sp  = stash pop
    sa  = stash apply
    sl  = stash list
    std = stash drop

    # --- Search & Find ---
    find      = "!git ls-files | grep -i"
    findfile  = "!f() { git ls-files | grep -i \"$1\"; }; f"
    findtext  = "!f() { git grep -n \"$1\"; }; f"
    findauthor= "!f() { git log --pretty=format:'%h - %an, %ar : %s' --author=\"$1\"; }; f"
    gr        = grep -Ii

    # --- Reset & Undo ---
    unstage   = reset HEAD --
    undo      = reset --soft HEAD^
    wip       = "!git add -A && git commit -m 'WIP'"

    # --- Utility ---
    aliases   = config --get-regexp alias
    cp        = cherry-pick
    tags      = tag --sort=-creatordate

# ──────────────────────────────────────────────────────────────────────────
# MISCELLANEOUS CONFIG
# ──────────────────────────────────────────────────────────────────────────
[help]
    autocorrect = prompt

[status]
    showUntrackedFiles = all
    relativePaths      = false
    submoduleSummary   = true

# Shorthand for GitHub repos: use "gh:owner/repo"
[url "git@github.com:"]
    insteadOf = gh:
[url "https://github.com"]
    insteadOf = gh:

[safe]
    directory = /tmp

[tag]
    forceSignAnnotated = true

# ──────────────────────────────────────────────────────────────────────────
# BRANCH
# ──────────────────────────────────────────────────────────────────────────
[branch]
    sort            = -committerdate   # List branches by most recent commit first
    autoSetupRebase = always

# ──────────────────────────────────────────────────────────────────────────
# INIT
# ──────────────────────────────────────────────────────────────────────────
[init]
    defaultBranch = main

# ──────────────────────────────────────────────────────────────────────────
# TRANSFER
# ──────────────────────────────────────────────────────────────────────────
[transfer]
    fsckObjects = true  # Verify object integrity during push/fetch

# ──────────────────────────────────────────────────────────────────────────
# MAINTENANCE
# ──────────────────────────────────────────────────────────────────────────
[maintenance]
    auto     = true        # Auto-maintenance in background
    strategy = incremental # Incremental maintenance approach

# ──────────────────────────────────────────────────────────────────────────
# LOG
# ──────────────────────────────────────────────────────────────────────────
[log]
    abbrevCommit = true   # Show short commit hashes
    follow       = true   # Continue history across renames
    date         = iso    # ISO date format in logs

# ──────────────────────────────────────────────────────────────────────────
# ADVICE
# ──────────────────────────────────────────────────────────────────────────
[advice]
    addEmptyPathspec      = false
    pushNonFastForward    = false
    statusHints           = false
    commitBeforeMerge     = false
    resolveConflict       = true

# ──────────────────────────────────────────────────────────────────────────
# PROTOCOL
# ──────────────────────────────────────────────────────────────────────────
[protocol]
    version = 2

# ──────────────────────────────────────────────────────────────────────────
# GARBAGE COLLECTION
# ──────────────────────────────────────────────────────────────────────────
[gc]
    auto         = 256
    autoDetach   = true
    pruneExpire  = 2.weeks.ago

# ──────────────────────────────────────────────────────────────────────────
# GITFLOW (IF YOU USE GIT FLOW)
# ──────────────────────────────────────────────────────────────────────────
[gitflow "branch"]
    master = main
    develop= develop

[gitflow "prefix"]
    feature    = feature/
    bugfix     = bugfix/
    release    = release/
    hotfix     = hotfix/
    support    = support/
    versiontag = v
